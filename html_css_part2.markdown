# Методичка по HTML и CSS: Часть 2

## 1. Вопросы для закрепления HTML

Эти вопросы помогут проверить знания по HTML из первой части. Попробуйте ответить самостоятельно, чтобы закрепить материал.

1. **Что делает тег `<!DOCTYPE html>` и почему он важен?**
2. **В чём разница между тегами `<strong>` и `<b>`? Когда лучше использовать каждый из них?**
3. **Как создать гиперссылку, которая открывается в новой вкладке? Напишите пример.**
4. **Что такое семантические теги? Назови три примера и опиши, для чего они используются.**
5. **Как создать нумерованный список с тремя элементами? Напишите код.**
6. **Что такое атрибут `alt` в теге `<img>` и почему он важен?**
7. **Напишите пример формы с текстовым полем для имени и кнопкой отправки.**
8. **Что произойдёт, если забыть закрыть тег `<p>`?**

## 2. Введение в CSS

CSS (Cascading Style Sheets) — это язык стилей, который используется для оформления HTML-страниц. Если HTML задаёт структуру (кости) страницы, то CSS отвечает за внешний вид (цвета, шрифты, расположение, размеры и т.д.). CSS позволяет сделать страницу красивой и адаптивной.

### 2.1. Как подключить CSS к HTML?

Есть три способа добавить CSS к HTML-документу:

1. **Внешний файл CSS** (рекомендуемый способ):
   - Создайте файл с расширением `.css`, например, `styles.css`.
   - Подключите его в `<head>` с помощью тега `<link>`:
     ```html
     <link rel="stylesheet" href="styles.css">
     ```
   - `href` указывает путь к файлу CSS (например, `styles.css` в той же папке).

2. **Внутренний CSS** (внутри `<style>`):
   - Добавьте стили в тег `<style>` внутри `<head>`:
     ```html
     <head>
         <style>
             h1 {
                 color: blue;
             }
         </style>
     </head>
     ```

3. **Инлайн-CSS** (в атрибуте `style`):
   - Добавьте стили прямо в тег через атрибут `style`:
     ```html
     <h1 style="color: blue;">Заголовок</h1>
     ```
   - Используется редко, только для небольших изменений, так как усложняет поддержку кода.

**Рекомендация**: Используйте внешний файл CSS для больших проектов, чтобы код был организованным и легко редактируемым.

### 2.2. Основы синтаксиса CSS

CSS состоит из **правил**, которые применяются к HTML-элементам. Каждое правило включает:
- **Селектор**: указывает, к какому элементу (или группе элементов) применяются стили.
- **Свойства и значения**: определяют, как будет выглядеть элемент.

Пример:
```css
h1 {
    color: navy;
    font-size: 24px;
}
```
- `h1` — селектор (применяется ко всем тегам `<h1>`).
- `color: navy;` — свойство `color` с значением `navy` (цвет текста).
- `font-size: 24px;` — свойство `font-size` с значением `24px` (размер шрифта).

Правила пишутся в формате:
```css
селектор {
    свойство: значение;
    свойство: значение;
}
```

### 2.3. Основные типы селекторов

1. **Селектор по тегу**:
   Применяет стили ко всем элементам с указанным тегом.
   ```css
   p {
       color: green;
   }
   ```
   Все параграфы `<p>` станут зелёными.

2. **Селектор по классу**:
   Применяется к элементам с определённым классом (атрибут `class`).
   ```css
   .intro {
       font-weight: bold;
   }
   ```
   ```html
   <p class="intro">Этот текст жирный.</p>
   ```

3. **Селектор по ID**:
   Применяется к элементу с уникальным `id`.
   ```css
   #main-header {
       background-color: yellow;
   }
   ```
   ```html
   <h1 id="main-header">Заголовок</h1>
   ```

4. **Универсальный селектор**:
   Применяется ко всем элементам.
   ```css
   * {
       margin: 0;
       padding: 0;
   }
   ```

5. **Селектор по атрибуту**:
   Применяется к элементам с определённым атрибутом.
   ```css
   [type="text"] {
       border: 1px solid black;
   }
   ```
   Применится ко всем `<input type="text">`.

### 2.4. Популярные CSS-свойства

#### Текст
- `color`: цвет текста (например, `color: #333;` или `color: red;`).
- `font-size`: размер шрифта (например, `font-size: 16px;`).
- `font-family`: шрифт (например, `font-family: Arial, sans-serif;`).
- `font-weight`: толщина шрифта (например, `font-weight: bold;` или `font-weight: 700;`).
- `text-align`: выравнивание текста (`left`, `center`, `right`, `justify`).

Пример:
```css
p {
    color: darkblue;
    font-size: 18px;
    text-align: center;
}
```

#### Фон
- `background-color`: цвет фона (например, `background-color: #f0f0f0;`).
- `background-image`: фоновое изображение (например, `background-image: url('bg.jpg');`).
- `background-size`: размер фона (например, `cover`, `contain`).

Пример:
```css
body {
    background-color: lightgray;
}
```

#### Размеры и отступы
- `width` и `height`: ширина и высота элемента (например, `width: 200px;`).
- `margin`: внешний отступ (например, `margin: 10px;`).
- `padding`: внутренний отступ (например, `padding: 15px;`).

Пример:
```css
div {
    width: 300px;
    margin: 20px auto;
    padding: 10px;
}
```

#### Границы
- `border`: стиль, толщина и цвет границы (например, `border: 1px solid black;`).
- `border-radius`: скругление углов (например, `border-radius: 5px;`).

Пример:
```css
button {
    border: 2px solid blue;
    border-radius: 8px;
}
```

### 2.5. Пример: HTML + CSS

**index.html**:
```html
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Пример стилизации</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <header>
        <h1 class="main-title">Моя страница</h1>
    </header>
    <main>
        <p class="intro-text">Добро пожаловать на мою страницу!</p>
        <button id="action-button">Нажми меня</button>
    </main>
</body>
</html>
```

**styles.css**:
```css
body {
    background-color: #f4f4f4;
    font-family: Arial, sans-serif;
}

.main-title {
    color: navy;
    text-align: center;
    font-size: 32px;
}

.intro-text {
    font-size: 18px;
    color: darkgreen;
    text-align: center;
    margin: 20px;
}

#action-button {
    background-color: blue;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}
```

**Результат**:
- Заголовок будет синим, центрированным, с большим шрифтом.
- Параграф — зелёным, с отступами.
- Кнопка — синяя с белым текстом и скруглёнными углами.

### 2.6. Полезные советы по CSS

- **Проверяйте стили в браузере**: Используйте инструменты разработчика (F12 в Chrome) для тестирования стилей.
- **Используйте внешние файлы CSS**: Это упрощает поддержку и повторное использование.
- **Соблюдайте читаемость**: Разделяйте CSS на логические блоки с комментариями:
  ```css
  /* Стили для шапки */
  header {
      background-color: #333;
  }
  ```
- **Тестируйте на разных устройствах**: Проверяйте, как страница выглядит на компьютере и телефоне.
- **Избегайте инлайн-CSS**: Он усложняет изменения и поддержку.