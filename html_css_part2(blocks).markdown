# Методичка по HTML и CSS: Часть 2 — Блочная модель (Box Model)

## 1. Что такое блочная модель?

Блочная модель CSS (CSS Box Model) — это концепция, которая описывает, как браузер представляет каждый HTML-элемент в виде прямоугольного блока (коробки). Каждый элемент состоит из четырёх слоёв: содержимого (content), внутреннего отступа (padding), границы (border) и внешнего отступа (margin). Это основа для управления размерами и расположением элементов на странице.

### Компоненты блочной модели

1. **Content (содержимое)**:
   - Основной контент элемента: текст, изображения или вложенные элементы.
   - Размеры задаются свойствами `width` и `height`.
   - Пример: Текст внутри `<div>` или изображение в `<img>`.

2. **Padding (внутренний отступ)**:
   - Пространство между содержимым и границей.
   - Задаётся свойством `padding` (например, `padding: 10px;` — отступ 10px со всех сторон).
   - Создаёт "воздух" внутри элемента.

3. **Border (граница)**:
   - Линия вокруг padding и content.
   - Задаётся свойством `border` (например, `border: 1px solid black;`).
   - Может быть невидимой или с разными стилями (solid, dotted, dashed и т.д.).

4. **Margin (внешний отступ)**:
   - Пространство между границей элемента и соседними элементами.
   - Задаётся свойством `margin` (например, `margin: 20px;`).
   - Может быть отрицательным для перекрытия элементов.

**Формула размера элемента**:
- Полная ширина = content width + left padding + right padding + left border + right border + left margin + right margin.
- Аналогично для высоты.

### Иллюстрация
```
+-----------------------------+
| Margin (внешний отступ)     |
|  +-----------------------+  |
|  | Border (граница)      |  |
|  |  +-----------------+  |  |
|  |  | Padding         |  |  |
|  |  |  +-----------+  |  |  |
|  |  |  | Content   |  |  |  |
|  |  |  +-----------+  |  |  |
|  |  +-----------------+  |  |
|  +-----------------------+  |
+-----------------------------+
```

## 2. Свойство `box-sizing`

По умолчанию CSS использует `box-sizing: content-box;`, где `width` и `height` включают только содержимое. Padding и border добавляются к этим размерам, что может усложнить расчёты.

Рекомендуемый подход — использовать `box-sizing: border-box;`:
- `width` и `height` включают content + padding + border (margin остаётся снаружи).
- Это упрощает управление размерами.

Пример:
```css
div {
    width: 200px;
    padding: 20px;
    border: 5px solid black;
    /* content-box: полная ширина = 200 + 40 (padding) + 10 (border) = 250px */
    /* border-box: полная ширина = 200px (включает padding и border) */
    box-sizing: border-box;
}
```

## 3. Типы элементов

Блочная модель применяется ко всем элементам, но поведение зависит от их типа:
- **Блочные (`block`)**: Занимают всю ширину родителя, идут друг под другом (например, `<div>`, `<p>`, `<h1>`).
  - Можно задавать `width`, `height`, `margin`, `padding`.
- **Строчные (`inline`)**: Не занимают всю ширину, идут в строку (например, `<span>`, `<a>`).
  - Нельзя задавать `width` и `height`. Вертикальные `margin` и `padding` игнорируются.
- **Inline-block**: Гибрид — строчный, но с возможностью задавать размеры.

Пример:
```css
div { display: block; }
span { display: inline; }
img { display: inline-block; }
```

## 4. Управление отступами

- **Сокращённая запись**:
  - `padding: 10px;` — одинаковый отступ со всех сторон.
  - `padding: 10px 20px;` — верх/низ 10px, лево/право 20px.
  - `padding: 10px 20px 30px 40px;` — верх 10px, право 20px, низ 30px, лево 40px.
  - Аналогично для `margin`.

- **Центрирование**:
  ```css
  div {
      width: 300px;
      margin: 0 auto; /* Центрирует блок по горизонтали */
  }
  ```

- **Сворачивание margin**:
  Вертикальные margin соседних элементов сливаются: больший margin поглощает меньший.
  - Пример: Если у первого элемента `margin-bottom: 20px;`, а у второго `margin-top: 30px;`, итоговый отступ между ними будет 30px (не 50px).

## 5. Пример: HTML + CSS с блочной моделью

### index.html
```html
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Блочная модель</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="box">
        Это пример блочной модели!
    </div>
    <div class="centered-box">
        Центрированный блок с отступами.
    </div>
</body>
</html>
```

### styles.css
```css
/* Универсальный сброс отступов */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

/* Стили для первого блока */
.box {
    width: 300px;
    height: 150px;
    padding: 20px;
    border: 5px dashed red;
    margin: 30px;
    background-color: lightblue;
    text-align: center;
}

/* Стили для центрированного блока */
.centered-box {
    width: 400px;
    padding: 15px;
    border: 2px solid green;
    margin: 20px auto; /* Центрирование */
    background-color: lightyellow;
    text-align: center;
}
```

**Что делает этот код?**
- Первый блок (`.box`): 300x150px, с синим фоном, красной пунктирной рамкой, отступами внутри и снаружи.
- Второй блок (`.centered-box`): 400px шириной, центрированный, с жёлтым фоном и зелёной рамкой.
- `box-sizing: border-box;` упрощает расчёт размеров.

**Как протестировать?**
1. Создайте файлы `index.html` и `styles.css` в своей папке.
2. Откройте `index.html` в браузере, чтобы увидеть результат.

## 6. Задания для закрепления

Попробуйте выполнить эти задания, чтобы закрепить знания. Создайте HTML и CSS файлы, протестируйте в браузере.

1. **Простая коробка**:
   - Создайте `<div>` с текстом "Box Model Practice".
   - Задайте: ширина 250px, высота 100px, padding 10px, border 3px solid blue, margin 15px со всех сторон, `box-sizing: border-box;`.
   - Вопрос: Какова итоговая ширина элемента?

2. **Два блока с margin**:
   - Создайте два `<div>` с классом `block`, каждый с `margin-bottom: 20px;` для первого и `margin-top: 30px;` для второго.
   - Задайте ширину 200px, padding 10px, border 1px solid black.
   - Вопрос: Какой будет отступ между блоками? Почему?

3. **Центрированный блок**:
   - Создайте `<div>` с классом `center-box` и текстом "Центрированный блок".
   - Задайте ширину 350px, background-color: lightgreen, padding 20px, border 2px dotted purple, центрируй с помощью margin.
   - Вопрос: Как работает центрирование?

4. **Строчный vs Блочный**:
   - Создайте `<span>` и `<div>` с одинаковым текстом "Тест".
   - Задайте обоим: padding 10px, border 1px solid red, width 150px.
   - Вопрос: Почему у `<span>` ширина не работает? Как исправить?

## 7. Полезные советы

- **Используй `box-sizing: border-box;` глобально**:
  ```css
  * {
      box-sizing: border-box;
  }
  ```
- **Проверяйте в браузере**: Используйте инструменты разработчика (F12) для просмотра Box Model каждого элемента.
- **Избегайте больших margin**: Для сложного расположения лучше использовать Flexbox или Grid (рассмотрим позже).
- **Тестируйте размеры**: Убедитесь, что padding и border не ломают макет.
